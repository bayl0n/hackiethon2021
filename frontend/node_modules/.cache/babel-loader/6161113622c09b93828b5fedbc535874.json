{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/ivesp/Desktop/hackiethon2021/frontend/src/TimePreferences.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport DatePicker from 'react-date-picker';\nimport './TimePreferences.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TimePreferences() {\n  _s();\n\n  const [startDate, setStartDate] = React.useState(new Date());\n  const [endDate, setEndDate] = React.useState(new Date());\n  const [checkedDays, setCheckedDays] = React.useState([false, false, false, false, false, false, false]);\n\n  const chooseDay = idx => {\n    const newCheckedDays = [...checkedDays];\n\n    if (newCheckedDays[idx]) {\n      newCheckedDays[idx] = false;\n    } else {\n      newCheckedDays[idx] = true;\n    }\n\n    setCheckedDays(newCheckedDays);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"time-preferences-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Time Preferences\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"days-checklist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"start-end-date\",\n      children: [/*#__PURE__*/_jsxDEV(DatePicker, {\n        value: startDate,\n        onChange: setStartDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n        value: endDate,\n        onChange: setEndDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TimePreferences, \"9kW4NnBHxvJWY/e9MyLU2MYtfeI=\");\n\n_c = TimePreferences;\nexport default TimePreferences;\n\nvar _c;\n\n$RefreshReg$(_c, \"TimePreferences\");","map":{"version":3,"sources":["/mnt/c/Users/ivesp/Desktop/hackiethon2021/frontend/src/TimePreferences.jsx"],"names":["React","DatePicker","TimePreferences","startDate","setStartDate","useState","Date","endDate","setEndDate","checkedDays","setCheckedDays","chooseDay","idx","newCheckedDays"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,OAAO,uBAAP;;;AAEA,SAASC,eAAT,GAA4B;AAAA;;AAExB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,KAAK,CAACK,QAAN,CAAe,IAAIC,IAAJ,EAAf,CAAlC;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,KAAK,CAACK,QAAN,CAAe,IAAIC,IAAJ,EAAf,CAA9B;AACA,QAAM,CAACG,WAAD,EAAcC,cAAd,IAAgCV,KAAK,CAACK,QAAN,CAAe,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C,CAAf,CAAtC;;AAEA,QAAMM,SAAS,GAAIC,GAAD,IAAS;AACvB,UAAMC,cAAc,GAAG,CAAC,GAAGJ,WAAJ,CAAvB;;AACA,QAAII,cAAc,CAACD,GAAD,CAAlB,EAAyB;AACrBC,MAAAA,cAAc,CAACD,GAAD,CAAd,GAAsB,KAAtB;AACH,KAFD,MAEO;AACHC,MAAAA,cAAc,CAACD,GAAD,CAAd,GAAsB,IAAtB;AACH;;AACDF,IAAAA,cAAc,CAACG,cAAD,CAAd;AACH,GARD;;AAUA,sBACI;AAAK,IAAA,EAAE,EAAC,4BAAR;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,YAFJ,eAWI;AAAK,MAAA,EAAE,EAAC,gBAAR;AAAA,8BACI,QAAC,UAAD;AAAY,QAAA,KAAK,EAAEV,SAAnB;AAA8B,QAAA,QAAQ,EAAEC;AAAxC;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,UAAD;AAAY,QAAA,KAAK,EAAEG,OAAnB;AAA4B,QAAA,QAAQ,EAAEC;AAAtC;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH;;GAlCQN,e;;KAAAA,e;AAoCT,eAAeA,eAAf","sourcesContent":["import React from 'react';\r\nimport DatePicker from 'react-date-picker';\r\nimport './TimePreferences.css';\r\n\r\nfunction TimePreferences () {\r\n\r\n    const [startDate, setStartDate] = React.useState(new Date());\r\n    const [endDate, setEndDate] = React.useState(new Date());\r\n    const [checkedDays, setCheckedDays] = React.useState([false, false, false, false, false, false, false]);\r\n\r\n    const chooseDay = (idx) => {\r\n        const newCheckedDays = [...checkedDays];\r\n        if (newCheckedDays[idx]) {\r\n            newCheckedDays[idx] = false;\r\n        } else {\r\n            newCheckedDays[idx] = true;\r\n        }\r\n        setCheckedDays(newCheckedDays);\r\n    }\r\n\r\n    return (\r\n        <div id='time-preferences-container'>\r\n            <h1>Time Preferences</h1>\r\n            <div id='days-checklist'>\r\n                {/* <span className='day-box' onClick={chooseDay(0)}>Sun</span>\r\n                <span className='day-box' onClick={chooseDay(1)}>Mon</span>\r\n                <span className='day-box' onClick={chooseDay(2)}>Tues</span>\r\n                <span className='day-box' onClick={chooseDay(3)}>Wed</span>\r\n                <span className='day-box' onClick={chooseDay(4)}>Thurs</span>\r\n                <span className='day-box' onClick={chooseDay(5)}>Fri</span>\r\n                <span className='day-box' nClick={chooseDay(6)}>Sat</span> */}\r\n            </div>\r\n            <div id='start-end-date'>\r\n                <DatePicker value={startDate} onChange={setStartDate} />\r\n                <DatePicker value={endDate} onChange={setEndDate} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TimePreferences;\r\n"]},"metadata":{},"sourceType":"module"}