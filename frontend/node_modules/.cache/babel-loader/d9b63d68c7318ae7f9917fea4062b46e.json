{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/ivesp/Desktop/hackiethon2021/frontend/src/TimePreferences.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport DatePicker from 'react-date-picker';\nimport TimePicker from 'react-time-picker';\nimport './TimePreferences.css';\nimport { Dropdown } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst dayArray = ['Sun', 'Mon', 'Tues', 'Wed', 'Thurs', 'Fri', 'Sat'];\n\nfunction TimePreferences() {\n  _s();\n\n  const [startDate, setStartDate] = React.useState(new Date());\n  const [endDate, setEndDate] = React.useState(new Date());\n  const [checkedDays, setCheckedDays] = React.useState([false, false, false, false, false, false, false]);\n  const [startTime, setStartTime] = React.useState('00:00');\n  const [intervalTime, setIntervalTime] = React.useState('25 minutes');\n\n  const updateDays = idx => {\n    const newCheckedDays = [...checkedDays];\n\n    if (newCheckedDays[idx]) {\n      newCheckedDays[idx] = false;\n    } else {\n      newCheckedDays[idx] = true;\n    }\n\n    setCheckedDays(newCheckedDays);\n  };\n\n  React.useEffect(() => {\n    console.log(\"intervalTime=\", intervalTime);\n  }, [intervalTime]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"time-preferences-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Time Preferences\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"days-checklist\",\n      children: checkedDays.map((val, idx) => {\n        return /*#__PURE__*/_jsxDEV(DayBox, {\n          visible: checkedDays[idx],\n          index: idx,\n          setDay: () => updateDays(idx)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"start-end-date\",\n      children: [/*#__PURE__*/_jsxDEV(DatePicker, {\n        value: startDate,\n        onChange: setStartDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n        value: endDate,\n        onChange: setEndDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TimePicker, {\n        value: startTime,\n        onChange: setStartTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"interval-config\",\n      children: /*#__PURE__*/_jsxDEV(IntervalDropDown, {\n        value: intervalTime,\n        onChange: setIntervalTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TimePreferences, \"KfKpLs9Pp9LJKtaDhd0+9pA2Bwc=\");\n\n_c = TimePreferences;\n\nfunction DayBox({\n  visible,\n  index,\n  setDay\n}) {\n  if (visible === true) {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"day-box\",\n      onClick: setDay,\n      style: {\n        backgroundColor: \"red\",\n        cursor: \"pointer\"\n      },\n      children: dayArray[index]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"day-box\",\n      onClick: setDay,\n      style: {\n        backgroundColor: \"yellow\",\n        cursor: \"pointer\"\n      },\n      children: dayArray[index]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_c2 = DayBox;\n\nfunction IntervalDropDown() {\n  return /*#__PURE__*/_jsxDEV(Dropdown, {\n    children: [\"Let me take a break every\", /*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n      variant: \"primary\",\n      id: \"dropdown-basic\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n      children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n        children: \"5 minutes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n        children: \"10 minutes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n        children: \"15 minutes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n        children: \"20 minutes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n        children: \"25 minutes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n        children: \"30 minutes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n        children: \"35 minutes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n        children: \"40 minutes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n        children: \"45 minutes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n        children: \"50 minutes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n        children: \"1 hour\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n        children: \"2 hours\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n}\n\n_c3 = IntervalDropDown;\nexport default TimePreferences;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"TimePreferences\");\n$RefreshReg$(_c2, \"DayBox\");\n$RefreshReg$(_c3, \"IntervalDropDown\");","map":{"version":3,"sources":["/mnt/c/Users/ivesp/Desktop/hackiethon2021/frontend/src/TimePreferences.jsx"],"names":["React","DatePicker","TimePicker","Dropdown","dayArray","TimePreferences","startDate","setStartDate","useState","Date","endDate","setEndDate","checkedDays","setCheckedDays","startTime","setStartTime","intervalTime","setIntervalTime","updateDays","idx","newCheckedDays","useEffect","console","log","map","val","DayBox","visible","index","setDay","backgroundColor","cursor","IntervalDropDown"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport DatePicker from 'react-date-picker';\r\nimport TimePicker from 'react-time-picker';\r\nimport './TimePreferences.css';\r\nimport { Dropdown } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst dayArray = ['Sun', 'Mon', 'Tues', 'Wed', 'Thurs', 'Fri', 'Sat'];\r\n\r\nfunction TimePreferences () {\r\n\r\n    const [startDate, setStartDate] = React.useState(new Date());\r\n    const [endDate, setEndDate] = React.useState(new Date());\r\n    const [checkedDays, setCheckedDays] = React.useState([false, false, false, false, false, false, false]);\r\n    const [startTime, setStartTime] = React.useState('00:00');\r\n    const [intervalTime, setIntervalTime] = React.useState('25 minutes');\r\n\r\n    const updateDays = (idx) => {\r\n        const newCheckedDays = [...checkedDays];\r\n        if (newCheckedDays[idx]) {\r\n            newCheckedDays[idx] = false;\r\n        } else {\r\n            newCheckedDays[idx] = true;\r\n        }\r\n        setCheckedDays(newCheckedDays);\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        console.log(\"intervalTime=\", intervalTime);\r\n    }, [intervalTime]);\r\n\r\n    return (\r\n        <div id='time-preferences-container'>\r\n            <h1>Time Preferences</h1>\r\n            <div id='days-checklist'>\r\n                {checkedDays.map((val, idx) => {\r\n                    return (\r\n                        <DayBox \r\n                            visible={checkedDays[idx]}\r\n                            index={idx}\r\n                            setDay={() => updateDays(idx)}\r\n                        />\r\n                    );\r\n                })}\r\n            </div>\r\n            <div id='start-end-date'>\r\n                <DatePicker value={startDate} onChange={setStartDate} />\r\n                <DatePicker value={endDate} onChange={setEndDate} />\r\n                <TimePicker value={startTime} onChange={setStartTime} />\r\n            </div>\r\n            <div id='interval-config'>\r\n                <IntervalDropDown value={intervalTime} onChange={setIntervalTime}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction DayBox ( {visible, index, setDay} ) {\r\n    \r\n    if (visible === true) {\r\n        return (\r\n            <span\r\n                className='day-box' \r\n                onClick={setDay}\r\n                style={{backgroundColor: \"red\", cursor:\"pointer\"}}>{dayArray[index]}\r\n            </span> \r\n        );\r\n    } else {\r\n        return (\r\n            <span \r\n                className='day-box' \r\n                onClick={setDay}\r\n                style={{backgroundColor: \"yellow\", cursor:\"pointer\"}}>{dayArray[index]}\r\n            </span> \r\n        );\r\n    }\r\n}\r\n\r\nfunction IntervalDropDown () {\r\n    return (\r\n        <Dropdown>\r\n            Let me take a break every\r\n            <Dropdown.Toggle variant=\"primary\" id=\"dropdown-basic\">\r\n            </Dropdown.Toggle>\r\n            <Dropdown.Menu>\r\n                <Dropdown.Item >5 minutes</Dropdown.Item>\r\n                <Dropdown.Item>10 minutes</Dropdown.Item>\r\n                <Dropdown.Item>15 minutes</Dropdown.Item>\r\n                <Dropdown.Item>20 minutes</Dropdown.Item>\r\n                <Dropdown.Item>25 minutes</Dropdown.Item>\r\n                <Dropdown.Item>30 minutes</Dropdown.Item>\r\n                <Dropdown.Item>35 minutes</Dropdown.Item>\r\n                <Dropdown.Item>40 minutes</Dropdown.Item>\r\n                <Dropdown.Item>45 minutes</Dropdown.Item>\r\n                <Dropdown.Item>50 minutes</Dropdown.Item>\r\n                <Dropdown.Item>1 hour</Dropdown.Item>\r\n                <Dropdown.Item>2 hours</Dropdown.Item>\r\n            </Dropdown.Menu>\r\n        </Dropdown>\r\n    );\r\n}\r\n\r\nexport default TimePreferences;\r\n"]},"metadata":{},"sourceType":"module"}