{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/ivesp/Desktop/hackiethon2021/frontend/src/TimePreferences.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport DatePicker from 'react-date-picker';\nimport './TimePreferences.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TimePreferences() {\n  _s();\n\n  const [startDate, setStartDate] = React.useState(new Date());\n  const [endDate, setEndDate] = React.useState(new Date());\n  const [checkedDays, setCheckedDays] = React.useState([false, false, false, false, false, false, false]);\n\n  const updateDay0 = () => {\n    const newCheckedDays = [...checkedDays];\n\n    if (newCheckedDays[0]) {\n      newCheckedDays[0] = false;\n    } else {\n      newCheckedDays[0] = true;\n    }\n\n    setCheckedDays(newCheckedDays);\n  };\n\n  const updateDay1 = () => {\n    const newCheckedDays = [...checkedDays];\n\n    if (newCheckedDays[0]) {\n      newCheckedDays[0] = false;\n    } else {\n      newCheckedDays[0] = true;\n    }\n\n    setCheckedDays(newCheckedDays);\n  };\n\n  const updateDay2 = () => {\n    const newCheckedDays = [...checkedDays];\n\n    if (newCheckedDays[0]) {\n      newCheckedDays[0] = false;\n    } else {\n      newCheckedDays[0] = true;\n    }\n\n    setCheckedDays(newCheckedDays);\n  };\n\n  const updateDay3 = () => {\n    const newCheckedDays = [...checkedDays];\n\n    if (newCheckedDays[0]) {\n      newCheckedDays[0] = false;\n    } else {\n      newCheckedDays[0] = true;\n    }\n\n    setCheckedDays(newCheckedDays);\n  };\n\n  const updateDay4 = () => {\n    const newCheckedDays = [...checkedDays];\n\n    if (newCheckedDays[0]) {\n      newCheckedDays[0] = false;\n    } else {\n      newCheckedDays[0] = true;\n    }\n\n    setCheckedDays(newCheckedDays);\n  };\n\n  const updateDay5 = () => {\n    const newCheckedDays = [...checkedDays];\n\n    if (newCheckedDays[0]) {\n      newCheckedDays[0] = false;\n    } else {\n      newCheckedDays[0] = true;\n    }\n\n    setCheckedDays(newCheckedDays);\n  };\n\n  const updateDay6 = () => {\n    const newCheckedDays = [...checkedDays];\n\n    if (newCheckedDays[0]) {\n      newCheckedDays[0] = false;\n    } else {\n      newCheckedDays[0] = true;\n    }\n\n    setCheckedDays(newCheckedDays);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"time-preferences-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Time Preferences\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"days-checklist\",\n      children: checkedDays.map(idx => {\n        return /*#__PURE__*/_jsxDEV(DayBox, {\n          checked: checkedDays[idx],\n          index: idx,\n          setDay: updateDays\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"start-end-date\",\n      children: [/*#__PURE__*/_jsxDEV(DatePicker, {\n        value: startDate,\n        onChange: setStartDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n        value: endDate,\n        onChange: setEndDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TimePreferences, \"9kW4NnBHxvJWY/e9MyLU2MYtfeI=\");\n\n_c = TimePreferences;\n\nfunction DayBox({\n  checked,\n  index,\n  setDay\n}) {\n  const dayArray = ['Sun', 'Mon', 'Tues', 'Wed', 'Thurs', 'Fri', 'Sat'];\n\n  if (checked === true) {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"day-box\",\n      onClick: setDay(index),\n      style: {\n        backgroundColor: \"red\"\n      },\n      children: dayArray[index]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"day-box\",\n      onClick: setDay(index),\n      style: {\n        backgroundColor: \"yellow\"\n      },\n      children: dayArray[index]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_c2 = DayBox;\nexport default TimePreferences;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TimePreferences\");\n$RefreshReg$(_c2, \"DayBox\");","map":{"version":3,"sources":["/mnt/c/Users/ivesp/Desktop/hackiethon2021/frontend/src/TimePreferences.jsx"],"names":["React","DatePicker","TimePreferences","startDate","setStartDate","useState","Date","endDate","setEndDate","checkedDays","setCheckedDays","updateDay0","newCheckedDays","updateDay1","updateDay2","updateDay3","updateDay4","updateDay5","updateDay6","map","idx","updateDays","DayBox","checked","index","setDay","dayArray","backgroundColor"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport DatePicker from 'react-date-picker';\r\nimport './TimePreferences.css';\r\n\r\nfunction TimePreferences () {\r\n\r\n    const [startDate, setStartDate] = React.useState(new Date());\r\n    const [endDate, setEndDate] = React.useState(new Date());\r\n    const [checkedDays, setCheckedDays] = React.useState([false, false, false, false, false, false, false]);\r\n\r\n    const updateDay0 = () => {\r\n        const newCheckedDays = [...checkedDays];\r\n        if (newCheckedDays[0]) {\r\n            newCheckedDays[0] = false;\r\n        } else {\r\n            newCheckedDays[0] = true;\r\n        }\r\n        setCheckedDays(newCheckedDays);\r\n    }\r\n\r\n    const updateDay1 = () => {\r\n        const newCheckedDays = [...checkedDays];\r\n        if (newCheckedDays[0]) {\r\n            newCheckedDays[0] = false;\r\n        } else {\r\n            newCheckedDays[0] = true;\r\n        }\r\n        setCheckedDays(newCheckedDays);\r\n    }\r\n    \r\n    const updateDay2 = () => {\r\n        const newCheckedDays = [...checkedDays];\r\n        if (newCheckedDays[0]) {\r\n            newCheckedDays[0] = false;\r\n        } else {\r\n            newCheckedDays[0] = true;\r\n        }\r\n        setCheckedDays(newCheckedDays);\r\n    }\r\n\r\n    const updateDay3 = () => {\r\n        const newCheckedDays = [...checkedDays];\r\n        if (newCheckedDays[0]) {\r\n            newCheckedDays[0] = false;\r\n        } else {\r\n            newCheckedDays[0] = true;\r\n        }\r\n        setCheckedDays(newCheckedDays);\r\n    }\r\n\r\n    const updateDay4 = () => {\r\n        const newCheckedDays = [...checkedDays];\r\n        if (newCheckedDays[0]) {\r\n            newCheckedDays[0] = false;\r\n        } else {\r\n            newCheckedDays[0] = true;\r\n        }\r\n        setCheckedDays(newCheckedDays);\r\n    }\r\n\r\n    const updateDay5 = () => {\r\n        const newCheckedDays = [...checkedDays];\r\n        if (newCheckedDays[0]) {\r\n            newCheckedDays[0] = false;\r\n        } else {\r\n            newCheckedDays[0] = true;\r\n        }\r\n        setCheckedDays(newCheckedDays);\r\n    }\r\n\r\n    const updateDay6 = () => {\r\n        const newCheckedDays = [...checkedDays];\r\n        if (newCheckedDays[0]) {\r\n            newCheckedDays[0] = false;\r\n        } else {\r\n            newCheckedDays[0] = true;\r\n        }\r\n        setCheckedDays(newCheckedDays);\r\n    }\r\n\r\n    return (\r\n        <div id='time-preferences-container'>\r\n            <h1>Time Preferences</h1>\r\n            <div id='days-checklist'>\r\n                {checkedDays.map((idx) => {\r\n                    return (\r\n                        <DayBox \r\n                            checked={checkedDays[idx]}\r\n                            index={idx}\r\n                            setDay={updateDays}\r\n                        />\r\n                    );\r\n                })}\r\n            </div>\r\n            <div id='start-end-date'>\r\n                <DatePicker value={startDate} onChange={setStartDate} />\r\n                <DatePicker value={endDate} onChange={setEndDate} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction DayBox ( {checked, index, setDay} ) {\r\n    const dayArray = ['Sun', 'Mon', 'Tues', 'Wed', 'Thurs', 'Fri', 'Sat'];\r\n    if (checked === true) {\r\n        return (\r\n            <span \r\n                className='day-box' \r\n                onClick={setDay(index)}\r\n                style={{backgroundColor: \"red\"}}>{dayArray[index]}\r\n            </span> \r\n        );\r\n    } else {\r\n        return (\r\n            <span \r\n                className='day-box' \r\n                onClick={setDay(index)}\r\n                style={{backgroundColor: \"yellow\"}}>{dayArray[index]}\r\n            </span> \r\n        );\r\n    }\r\n}\r\n\r\nexport default TimePreferences;\r\n"]},"metadata":{},"sourceType":"module"}